namespace event;
//cursor event: 40bytes



//define the events here
union EventUnion { 
    Echo,
    Error,
    Join,
    Leave,
    Cursor,
    DrawIncrement

}

table Message {
  events: [EventUnion];
}

 struct Cursor
{
    ///client id
    client_id: uint8;
    x: uint16;
    y: uint16;
}

table Echo
{
  id: uint32;
  time: uint32;
  payload: string;
}


table Error
{
  description: string;
}


table Join
{
  id: string;
  client_id: uint8;
}

table Leave
{
}



// drawing actions
// drawing actions
// drawing actions


enum DrawType:byte
{
  Line,
  PolyLine,
  Rectangle,
  Circle,
}

struct DrawPoint
{
  x: uint16;
  y: uint16;
}

struct DrawColor
{
  r: uint8;
  g: uint8;
  b: uint8;
}



enum IncrementalType:byte
{
    PointerStart,
    PointerMove,
    PointerEnd,
    PointerCancel,
    Delete,
    DeletePoint,
    SelectDrawType,
    SelectDrawColor,
    //the undo-able form of delete:
    Archive,
    Unarchive,
}

/// used for small incremental drawing actions in the scratch path. temporary for visual effect only.
struct DrawIncrement
{
    client_id: uint8;
    type: IncrementalType;
    p1: uint16;
    p2: uint16;
    p3: uint16;
    store: bool;
}




root_type Message;