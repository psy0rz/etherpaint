namespace event;


//define the events here
union EventUnion { 
    Echo,
    Error,
    Join,
    Leave,
    ClientDraw,
    ServerDraw,
    Cursor,

}

table Cursor
{
    x: uint8;
    y: uint8;
}


table Message {
  event: EventUnion;
}

      
table Echo
{
  id: uint32;
  time: uint32;
  payload: string;
}

table Error
{
  description: string;
}


table Join
{
  id: string;
}

table Leave
{
}

table ServerDraw
{
}

table ClientDraw
{
    changes: [DrawChange];
}



// drawing actions
// drawing actions
// drawing actions


enum DrawTooltype:byte
{
  Unchanged,
  Line,
  PolyLine,
  Rectangle,
  Circle,
}

struct DrawPoint
{
  x: uint16;
  y: uint16;
}

struct DrawColor
{
  r: uint8;
  g: uint8;
  b: uint8;
  set: bool;
}

//we use the fact that default values are not taking up space to our advantage here.
//so usually almost no fields are set (e.g. default), so we use the cached values.
table DrawChange
{
    //reset all fields to default for this client
    reset: bool;
    client_id: uint8;
    object_id: uint16;
    tool_type: DrawTooltype;
    add_points: [DrawPoint];
    remove_points: uint8;
    fill_color: DrawColor;
    line_color: DrawColor;
    cursor: DrawPoint;
}



root_type Message;