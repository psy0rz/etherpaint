namespace paper;

//define the events here
union Event { 
    CursorEvent,
    ObjectUpdateEvent,
    ObjectAddPointsEvent,
    ObjectDeleteEvent,
    UserEvent,
}

//one websocket received message has multiple events
table Message {
  events:[Event];
}

//info about a user (todo: add color/icon etc)
table UserEvent
{
  uid: uint32;
  name: string;
}

//cursor position of a user
struct  CursorEvent
{
  x: int32;
  y: int32;
  uid: uint32;
}

enum ObjectType:byte
{
  Line,
  PolyLine,
  Rectangle,
  Circle,
}

struct Point
{
  x: uint16;
  y: uint16;
}

struct Color
{
  r: uint8;
  g: uint8;
  b: uint8;
}

//update/create new object.
table ObjectUpdateEvent
{
  id: uint32=0; //0=new, let server decide
  type: ObjectType;
  color: Color;
  points: [Point];
}



//add more points to an object
table ObjectAddPointsEvent
{
  id: uint32;
  points: [Point];
}

//delete object
table ObjectDeleteEvent
{
  id: uint32;
}


root_type Message;