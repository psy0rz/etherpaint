// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var paper = paper || {};

/**
 * @enum {number}
 */
paper.Event = {
  NONE: 0,
  CursorEvent: 1,
  ObjectUpdateEvent: 2,
  ObjectAddPointsEvent: 3,
  ObjectDeleteEvent: 4,
  UserEvent: 5
};

/**
 * @enum {string}
 */
paper.EventName = {
  '0': 'NONE',
  '1': 'CursorEvent',
  '2': 'ObjectUpdateEvent',
  '3': 'ObjectAddPointsEvent',
  '4': 'ObjectDeleteEvent',
  '5': 'UserEvent'
};

/**
 * @enum {number}
 */
paper.ObjectType = {
  Line: 0,
  PolyLine: 1,
  Rectangle: 2,
  Circle: 3
};

/**
 * @enum {string}
 */
paper.ObjectTypeName = {
  '0': 'Line',
  '1': 'PolyLine',
  '2': 'Rectangle',
  '3': 'Circle'
};

/**
 * @constructor
 */
paper.Message = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {paper.Message}
 */
paper.Message.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {paper.Message=} obj
 * @returns {paper.Message}
 */
paper.Message.getRootAsMessage = function(bb, obj) {
  return (obj || new paper.Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {paper.Message=} obj
 * @returns {paper.Message}
 */
paper.Message.getSizePrefixedRootAsMessage = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new paper.Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {paper.Event}
 */
paper.Message.prototype.eventsType = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {paper.Event} */ (this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index)) : /** @type {paper.Event} */ (0);
};

/**
 * @returns {number}
 */
paper.Message.prototype.eventsTypeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
paper.Message.prototype.eventsTypeArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Table=} obj
 * @returns {?flatbuffers.Table}
 */
paper.Message.prototype.events = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb.__vector(this.bb_pos + offset) + index * 4) : null;
};

/**
 * @returns {number}
 */
paper.Message.prototype.eventsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
paper.Message.startMessage = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} eventsTypeOffset
 */
paper.Message.addEventsType = function(builder, eventsTypeOffset) {
  builder.addFieldOffset(0, eventsTypeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<paper.Event>} data
 * @returns {flatbuffers.Offset}
 */
paper.Message.createEventsTypeVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
paper.Message.startEventsTypeVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} eventsOffset
 */
paper.Message.addEvents = function(builder, eventsOffset) {
  builder.addFieldOffset(1, eventsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
paper.Message.createEventsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
paper.Message.startEventsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
paper.Message.endMessage = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
paper.Message.finishMessageBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
paper.Message.finishSizePrefixedMessageBuffer = function(builder, offset) {
  builder.finish(offset, undefined, true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} eventsTypeOffset
 * @param {flatbuffers.Offset} eventsOffset
 * @returns {flatbuffers.Offset}
 */
paper.Message.createMessage = function(builder, eventsTypeOffset, eventsOffset) {
  paper.Message.startMessage(builder);
  paper.Message.addEventsType(builder, eventsTypeOffset);
  paper.Message.addEvents(builder, eventsOffset);
  return paper.Message.endMessage(builder);
}

/**
 * @constructor
 */
paper.UserEvent = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {paper.UserEvent}
 */
paper.UserEvent.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {paper.UserEvent=} obj
 * @returns {paper.UserEvent}
 */
paper.UserEvent.getRootAsUserEvent = function(bb, obj) {
  return (obj || new paper.UserEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {paper.UserEvent=} obj
 * @returns {paper.UserEvent}
 */
paper.UserEvent.getSizePrefixedRootAsUserEvent = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new paper.UserEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
paper.UserEvent.prototype.uid = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
paper.UserEvent.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
paper.UserEvent.startUserEvent = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} uid
 */
paper.UserEvent.addUid = function(builder, uid) {
  builder.addFieldInt32(0, uid, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
paper.UserEvent.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
paper.UserEvent.endUserEvent = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} uid
 * @param {flatbuffers.Offset} nameOffset
 * @returns {flatbuffers.Offset}
 */
paper.UserEvent.createUserEvent = function(builder, uid, nameOffset) {
  paper.UserEvent.startUserEvent(builder);
  paper.UserEvent.addUid(builder, uid);
  paper.UserEvent.addName(builder, nameOffset);
  return paper.UserEvent.endUserEvent(builder);
}

/**
 * @constructor
 */
paper.CursorEvent = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {paper.CursorEvent}
 */
paper.CursorEvent.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
paper.CursorEvent.prototype.x = function() {
  return this.bb.readInt32(this.bb_pos);
};

/**
 * @returns {number}
 */
paper.CursorEvent.prototype.y = function() {
  return this.bb.readInt32(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
paper.CursorEvent.prototype.uid = function() {
  return this.bb.readUint32(this.bb_pos + 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} uid
 * @returns {flatbuffers.Offset}
 */
paper.CursorEvent.createCursorEvent = function(builder, x, y, uid) {
  builder.prep(4, 12);
  builder.writeInt32(uid);
  builder.writeInt32(y);
  builder.writeInt32(x);
  return builder.offset();
};

/**
 * @constructor
 */
paper.Point = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {paper.Point}
 */
paper.Point.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
paper.Point.prototype.x = function() {
  return this.bb.readUint16(this.bb_pos);
};

/**
 * @returns {number}
 */
paper.Point.prototype.y = function() {
  return this.bb.readUint16(this.bb_pos + 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @returns {flatbuffers.Offset}
 */
paper.Point.createPoint = function(builder, x, y) {
  builder.prep(2, 4);
  builder.writeInt16(y);
  builder.writeInt16(x);
  return builder.offset();
};

/**
 * @constructor
 */
paper.Color = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {paper.Color}
 */
paper.Color.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
paper.Color.prototype.r = function() {
  return this.bb.readUint8(this.bb_pos);
};

/**
 * @returns {number}
 */
paper.Color.prototype.g = function() {
  return this.bb.readUint8(this.bb_pos + 1);
};

/**
 * @returns {number}
 */
paper.Color.prototype.b = function() {
  return this.bb.readUint8(this.bb_pos + 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} r
 * @param {number} g
 * @param {number} b
 * @returns {flatbuffers.Offset}
 */
paper.Color.createColor = function(builder, r, g, b) {
  builder.prep(1, 3);
  builder.writeInt8(b);
  builder.writeInt8(g);
  builder.writeInt8(r);
  return builder.offset();
};

/**
 * @constructor
 */
paper.ObjectUpdateEvent = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {paper.ObjectUpdateEvent}
 */
paper.ObjectUpdateEvent.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {paper.ObjectUpdateEvent=} obj
 * @returns {paper.ObjectUpdateEvent}
 */
paper.ObjectUpdateEvent.getRootAsObjectUpdateEvent = function(bb, obj) {
  return (obj || new paper.ObjectUpdateEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {paper.ObjectUpdateEvent=} obj
 * @returns {paper.ObjectUpdateEvent}
 */
paper.ObjectUpdateEvent.getSizePrefixedRootAsObjectUpdateEvent = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new paper.ObjectUpdateEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
paper.ObjectUpdateEvent.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {paper.ObjectType}
 */
paper.ObjectUpdateEvent.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {paper.ObjectType} */ (this.bb.readInt8(this.bb_pos + offset)) : paper.ObjectType.Line;
};

/**
 * @param {paper.Color=} obj
 * @returns {paper.Color|null}
 */
paper.ObjectUpdateEvent.prototype.color = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new paper.Color).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {number} index
 * @param {paper.Point=} obj
 * @returns {paper.Point}
 */
paper.ObjectUpdateEvent.prototype.points = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new paper.Point).__init(this.bb.__vector(this.bb_pos + offset) + index * 4, this.bb) : null;
};

/**
 * @returns {number}
 */
paper.ObjectUpdateEvent.prototype.pointsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
paper.ObjectUpdateEvent.startObjectUpdateEvent = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
paper.ObjectUpdateEvent.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {paper.ObjectType} type
 */
paper.ObjectUpdateEvent.addType = function(builder, type) {
  builder.addFieldInt8(1, type, paper.ObjectType.Line);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} colorOffset
 */
paper.ObjectUpdateEvent.addColor = function(builder, colorOffset) {
  builder.addFieldStruct(2, colorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} pointsOffset
 */
paper.ObjectUpdateEvent.addPoints = function(builder, pointsOffset) {
  builder.addFieldOffset(3, pointsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
paper.ObjectUpdateEvent.startPointsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
paper.ObjectUpdateEvent.endObjectUpdateEvent = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @param {paper.ObjectType} type
 * @param {flatbuffers.Offset} colorOffset
 * @param {flatbuffers.Offset} pointsOffset
 * @returns {flatbuffers.Offset}
 */
paper.ObjectUpdateEvent.createObjectUpdateEvent = function(builder, id, type, colorOffset, pointsOffset) {
  paper.ObjectUpdateEvent.startObjectUpdateEvent(builder);
  paper.ObjectUpdateEvent.addId(builder, id);
  paper.ObjectUpdateEvent.addType(builder, type);
  paper.ObjectUpdateEvent.addColor(builder, colorOffset);
  paper.ObjectUpdateEvent.addPoints(builder, pointsOffset);
  return paper.ObjectUpdateEvent.endObjectUpdateEvent(builder);
}

/**
 * @constructor
 */
paper.ObjectAddPointsEvent = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {paper.ObjectAddPointsEvent}
 */
paper.ObjectAddPointsEvent.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {paper.ObjectAddPointsEvent=} obj
 * @returns {paper.ObjectAddPointsEvent}
 */
paper.ObjectAddPointsEvent.getRootAsObjectAddPointsEvent = function(bb, obj) {
  return (obj || new paper.ObjectAddPointsEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {paper.ObjectAddPointsEvent=} obj
 * @returns {paper.ObjectAddPointsEvent}
 */
paper.ObjectAddPointsEvent.getSizePrefixedRootAsObjectAddPointsEvent = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new paper.ObjectAddPointsEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
paper.ObjectAddPointsEvent.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {paper.Point=} obj
 * @returns {paper.Point}
 */
paper.ObjectAddPointsEvent.prototype.points = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new paper.Point).__init(this.bb.__vector(this.bb_pos + offset) + index * 4, this.bb) : null;
};

/**
 * @returns {number}
 */
paper.ObjectAddPointsEvent.prototype.pointsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
paper.ObjectAddPointsEvent.startObjectAddPointsEvent = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
paper.ObjectAddPointsEvent.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} pointsOffset
 */
paper.ObjectAddPointsEvent.addPoints = function(builder, pointsOffset) {
  builder.addFieldOffset(1, pointsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
paper.ObjectAddPointsEvent.startPointsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
paper.ObjectAddPointsEvent.endObjectAddPointsEvent = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @param {flatbuffers.Offset} pointsOffset
 * @returns {flatbuffers.Offset}
 */
paper.ObjectAddPointsEvent.createObjectAddPointsEvent = function(builder, id, pointsOffset) {
  paper.ObjectAddPointsEvent.startObjectAddPointsEvent(builder);
  paper.ObjectAddPointsEvent.addId(builder, id);
  paper.ObjectAddPointsEvent.addPoints(builder, pointsOffset);
  return paper.ObjectAddPointsEvent.endObjectAddPointsEvent(builder);
}

/**
 * @constructor
 */
paper.ObjectDeleteEvent = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {paper.ObjectDeleteEvent}
 */
paper.ObjectDeleteEvent.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {paper.ObjectDeleteEvent=} obj
 * @returns {paper.ObjectDeleteEvent}
 */
paper.ObjectDeleteEvent.getRootAsObjectDeleteEvent = function(bb, obj) {
  return (obj || new paper.ObjectDeleteEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {paper.ObjectDeleteEvent=} obj
 * @returns {paper.ObjectDeleteEvent}
 */
paper.ObjectDeleteEvent.getSizePrefixedRootAsObjectDeleteEvent = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new paper.ObjectDeleteEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
paper.ObjectDeleteEvent.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
paper.ObjectDeleteEvent.startObjectDeleteEvent = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
paper.ObjectDeleteEvent.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
paper.ObjectDeleteEvent.endObjectDeleteEvent = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @returns {flatbuffers.Offset}
 */
paper.ObjectDeleteEvent.createObjectDeleteEvent = function(builder, id) {
  paper.ObjectDeleteEvent.startObjectDeleteEvent(builder);
  paper.ObjectDeleteEvent.addId(builder, id);
  return paper.ObjectDeleteEvent.endObjectDeleteEvent(builder);
}

// Exports for Node.js and RequireJS
this.paper = paper;
